{
	"info": {
		"_postman_id": "4c062dd1-7b5c-47d8-9a42-923af5795301",
		"name": "MÓDULO LOGIN",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47434408",
		"_collection_link": "https://www.postman.com/renan-henriqueba-6059498/workspace/api-serverest/collection/47434408-4c062dd1-7b5c-47d8-9a42-923af5795301?action=share&source=collection_link&creator=47434408"
	},
	"item": [
		{
			"name": "Cenário US002-CE1: Autenticação de Usuário",
			"item": [
				{
					"name": "Validar tempo de expiração do token (10 minutos)",
					"item": [
						{
							"name": "Autenticar e capturar token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.globals.set(\"tokenUsuarioTempo\", jsonData.authorization);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{admin_email}}\",\r\n  \"password\": \"{{admin_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar produto logo após a autenticação",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenUsuarioTempo}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Produto 1\",\r\n    \"preco\": 1000,\r\n    \"descricao\": \"Produto exemplo\",\r\n    \"quantidade\": 10\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/produtos",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar produto após 11 minutos da autenticação",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenUsuarioTempo}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Produto 2\",\r\n    \"preco\": 1000,\r\n    \"descricao\": \"Produto exemplo\",\r\n    \"quantidade\": 10\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/produtos",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Autenticar com sucesso utilizando credenciais válidas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\",\r",
									"      \"description\": \"Mensagem de status sobre o login.\"\r",
									"    },\r",
									"    \"authorization\": {\r",
									"      \"type\": \"string\",\r",
									"      \"description\": \"Token JWT para autorização.\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\",\r",
									"    \"authorization\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validação do corpo da resposta\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{usuarioConsumidor1_email}}\",\r\n  \"password\": \"{{usuarioConsumidor1_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tentar autenticar com senha inválida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\",\r",
									"      \"description\": \"Mensagem de erro indicando que as credenciais fornecidas são inválidas.\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validação do corpo da resposta\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{usuarioConsumidor1_email}}\",\r\n  \"password\": \"invalida\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tentar autenticar com um e-mail não cadastrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\",\r",
									"      \"description\": \"Mensagem de erro indicando que as credenciais fornecidas são inválidas.\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validação do corpo da resposta\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"naoexiste@qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tentar autenticar com o campo \"email\" vazio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"teste\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tentar autenticar com o campo \"password\" vazio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"teste@qa.com.br\",\r\n  \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}